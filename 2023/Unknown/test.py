from sage.all import *
from Crypto.Util.number import *
from gmpy2 import *
import itertools
from sage.matrix.matrix2 import Matrix as Matrix2


c1 = 5581849118427193662998466877045235296274626958226539895450907801651771390814371394945603185129005992106521957147553475115573314036938430838152301689371133531648510080533640134493994636487476971475256034298687914215131268506167238681377437389457168365075498368546749283983176133762159008033849148428155280740463436381787092
c2 = 362997993110222823297069540868809253464861985789522271608172313667443982041784497260458800786581879946044237260466537429552586218005654701994788127762286463994034454910973772235255886935773467633903539261202277547923847901582495804166179010963563587936851952491934748428489041283540834611618563996185021410093
c3 = 7288692258643974768439681431270583480592614805488243584914626441374113536728408533792351492551567986256580665719626178842870669078754286459976088647207467819280584617163862030392841005967324828229366882181119473006427830087466513994205743357846018063058877915627260364252656732612061059079089562750044823923972609641547181313291755036102776545595258858012628815258081994422710066482460907950693009629728867726828485932719557937172369135208841425385748047762887576373504438883581197241876646655365217961284433738831803757247371621021361999504325772379969149465602013140552484868995849852325310351304316811122107253031
p = 164089790833491173983735553369019320383229876401896630230536002054446852958151572923812774557419238953668201196293706963143367265849075343626323506651426833415415438943751121425743689917066603557523627873459297750896739201342248952068900180955639604509738540544296099751090870528328003820481906127520287168919


y = int(iroot(c3,4)[0])
print(isPrime(y))
print(len(bin(y)))
print(y)
#
# '''
# c1=x**2*y+y*z+z**6%p
# c2=x**2+3*y*z+z**4%p
# c3=x*y+y**4+x*z%p
# '''
# '''
# F = [f1,f2,f3]
# I = Ideal(F).groebner_basis()
# print(I)
# '''
#
# R.<x,z> = Zmod(p)[]
# f1 = x^2*y+y*z+z^6-c1
# f2 = x^2+3*y*z+z^4-c2
# f3 = x*y+y^4+x*z-c3
# F = [f1,f2,f3]
# I = Ideal(F).groebner_basis()
# print(I)
# #(x,z) = solve_mod([x^2*y+y*z+z^6-c1==0,x^2+3*y*z+z^4-c2==0],p)
# #print(x,z)
# '''
# [x + 164089790833491173983735553369019320383229876401896630230536002054446852958151572923812774557419238953668201196293706963143367265849075343626323506651426833415415438943751121425743689917066603557523627873459297750896739201341471707233831802180958016326997240879356420050187998308096075394626910621439951025434, z + 164089790833491173983735553369019320383229876401896630230536002054446852958151572923812774557419238953668201196293706963143367265849075343626323506651426820522054792144751357340307725211671315314499257521648717163275790532602760305066811304495151443305825991332197766145714219084849618620437795639568776663642]
# '''
# x = 164089790833491173983735553369019320383229876401896630230536002054446852958151572923812774557419238953668201196293706963143367265849075343626323506651426833415415438943751121425743689917066603557523627873459297750896739201341471707233831802180958016326997240879356420050187998308096075394626910621439951025434
# print(long_to_bytes(p-x))